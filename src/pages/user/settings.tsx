import { getSession } from 'next-auth/react';
import Head from 'next/head';
import { useState } from 'react';
import { redirect } from 'next/navigation';
import { MdLocationPin } from 'react-icons/md';
import { useEffect } from 'react';
import dayjs from 'dayjs';
import { useRouter } from 'next/router';
import { useSession } from 'next-auth/react';
import PublicProfile from '@/components/complex/PublicProfile';
import { userI, NotificationType } from '@/interfaces';
import ToastBanner from '@/components/messages/banner';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

dayjs.locale('es-do');

export async function getServerSideProps(context: { req: any }) {
  const session = await getSession({ req: context.req });
  // If the user is not authenticated, redirect to the home page
  if (!session) {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    };
  }

  return { props: {} };
}

const UserSettings = () => {
  const { data: session, status } = useSession();

  if (status === 'unauthenticated') {
    redirect('/');
  }

  const router = useRouter();
  const [userInfo, setUserInfo] = useState<userI>();
  const [activeKey, setActiveKey] = useState('');
  const [statusMessage, setStatusMessage] = useState<{
    type?: 'success' | 'warning' | 'error';
    message?: string;
    is_visible: boolean;
  }>({ is_visible: false });

  useEffect(() => {
    const hash = window.location.hash;

    console.log('hash', hash);
    if (hash) {
      setActiveKey(hash.slice(1));
    }
  }, []);

  useEffect(() => {
    if (session?.user && session.user.name) {
      setUserInfo(session['user']!);
    }
  }, [session]);

  return (
    <div>
      <Head>
        <title>Ajustes de tu cuenta - Encoro</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="robots" content="noindex" />
      </Head>

      <div className="mx-auto min-h-screen max-w-[1200px] px-4">
        {statusMessage.is_visible ? (
          <ToastBanner
            type={statusMessage.type!}
            message={statusMessage.message!}
            closeToast={() => setStatusMessage({ is_visible: false })}
          />
        ) : null}

        <div className="py-8">
          <div className="flex gap-4 md:gap-8">
            <div className="flex h-[88px] w-[88px] overflow-hidden rounded-xl border border-slate-100">
              <img
                src={userInfo?.business_picture ?? ''}
                alt=""
                className="h-auto w-full object-cover"
              />
            </div>

            <div>
              <h3 className="mb-2 text-xl font-semibold leading-tight text-slate-800">
                {userInfo?.name ?? ''}
              </h3>
              <h4 className="text-base font-normal text-slate-800">
                @{userInfo?.username ?? ''}
              </h4>
            </div>
          </div>
        </div>

        {userInfo && !userInfo.is_business ? (
          <div className="py-8 lg:py-8">
            <div className="flex flex-col rounded-xl border border-slate-200 p-8">
              <img
                src={`/images/illustration/underconstruction.svg`}
                alt="page-under-construction"
                className="mx-auto mb-8 h-[272px] max-w-[400px]"
              />

              <h1 className="mb-4 text-center normal-case lg:mb-6">
                Bajo construcción
              </h1>

              <p className="mb-0 text-center text-xl font-light leading-normal text-slate-500 lg:text-2xl">
                Actualmente esta sección esta bajo construcción, solo disponible
                para los usuarios <i>Negocios</i>.
              </p>

              <Button
                variant="secondary"
                onClick={() => router.push('/')}
                className="mx-auto mt-8 w-full max-w-[248px] py-2 text-lg"
              >
                Volver a inicio
              </Button>
            </div>
          </div>
        ) : (
          <div className="py-8 lg:py-8">
            <Tabs
              defaultValue={activeKey || (userInfo?.is_business ? 'public_profile' : 'privacy')}
              value={activeKey || (userInfo?.is_business ? 'public_profile' : 'privacy')}
              className="flex flex-col gap-8 lg:flex-row"
            >
              <TabsList className="flex h-auto flex-col gap-4 bg-transparent p-0">
                {userInfo?.is_business ? (
                  <TabsTrigger
                    value="public_profile"
                    className="w-full text-left text-slate-500 data-[state=active]:bg-primary data-[state=active]:text-white md:w-[140px]"
                    onClick={() => {
                      setActiveKey('public_profile');
                      router.push('#public_profile');
                    }}
                  >
                    Perfil Publico
                  </TabsTrigger>
                ) : null}
              </TabsList>

              <div className="max-w-[700px]">
                <TabsContent value="privacy">
                  <div>
                    <h3 className="mb-8">Informacion de usuario</h3>
                    <div className="mb-8">
                      <div className="flex">
                        <Label>Nombre</Label>
                      </div>
                      <div className="flex">
                        <div className="flex items-center rounded-l-md border border-r-0 border-slate-200 bg-slate-50 px-3">
                          <MdLocationPin />
                        </div>
                        <Input
                          type="text"
                          placeholder="Correo electronico"
                          defaultValue={'placeholder@email.com'}
                          disabled
                          className="rounded-l-none"
                        />
                      </div>
                    </div>

                    <div className="mb-8">
                      <div className="flex">
                        <Label>Correo electronico</Label>
                      </div>
                      <div className="flex">
                        <div className="flex items-center rounded-l-md border border-r-0 border-slate-200 bg-slate-50 px-3">
                          <MdLocationPin />
                        </div>
                        <Input
                          type="text"
                          placeholder="Correo electronico"
                          defaultValue={'placeholder@email.com'}
                          disabled
                          className="rounded-l-none"
                        />
                      </div>
                    </div>

                    <div className="mb-8">
                      <div className="flex">
                        <Label>Correo electronico secundario</Label>
                      </div>
                      <div className="flex">
                        <div className="flex items-center rounded-l-md border border-r-0 border-slate-200 bg-slate-50 px-3">
                          <MdLocationPin />
                        </div>
                        <Input
                          type="text"
                          placeholder="Confirmar contrasena"
                          className="rounded-l-none"
                        />
                      </div>
                    </div>

                    <div className="mb-8">
                      <div className="flex">
                        <Label>Numero telefonico</Label>
                      </div>
                      <div className="flex">
                        <div className="flex items-center rounded-l-md border border-r-0 border-slate-200 bg-slate-50 px-3">
                          <MdLocationPin />
                        </div>
                        <Input
                          type="text"
                          placeholder="Numero telefonico"
                          className="rounded-l-none"
                        />
                      </div>
                    </div>

                    <div className="my-9 flex gap-6">
                      <Button variant="default">Guardar cambios</Button>
                      <Button variant="secondary">Descartar</Button>
                    </div>

                    <span className="my-9 inline-block h-px bg-slate-200"></span>

                    <h3 className="my-8">Cambiar contrasena</h3>
                    <div className="mb-8">
                      <div className="flex">
                        <Label>Cambiar contrasena</Label>
                      </div>
                      <div className="flex">
                        <div className="flex items-center rounded-l-md border border-r-0 border-slate-200 bg-slate-50 px-3">
                          <MdLocationPin />
                        </div>
                        <Input
                          type="text"
                          placeholder="Nueva contrasena"
                          className="rounded-l-none"
                        />
                      </div>
                    </div>

                    <div className="mb-8">
                      <div className="flex">
                        <Label>Confirmar contrasena</Label>
                      </div>
                      <div className="flex">
                        <div className="flex items-center rounded-l-md border border-r-0 border-slate-200 bg-slate-50 px-3">
                          <MdLocationPin />
                        </div>
                        <Input
                          type="text"
                          placeholder="Confirmar contrasena"
                          className="rounded-l-none"
                        />
                      </div>
                    </div>

                    <div className="my-9 flex gap-6">
                      <Button variant="default">Cambiar contrasena</Button>
                    </div>
                  </div>
                </TabsContent>

                <TabsContent value="public_profile">
                  {userInfo?.is_business ? (
                    <PublicProfile
                      publicProfile={userInfo}
                      triggerNotification={({
                        is_visible,
                        type,
                      }: {
                        is_visible: boolean;
                        type: NotificationType;
                      }) => {
                        console.log('TRIGGERING NOTIF', {
                          is_visible,
                          type,
                        });
                        setStatusMessage({
                          is_visible,
                          type,
                          message:
                            type === 'success'
                              ? 'Perfil actualizado exitosamente.'
                              : 'Upps! Parece que tenemos un problema. Intenta mas tarde.',
                        });
                      }}
                    />
                  ) : null}
                </TabsContent>
              </div>
            </Tabs>
          </div>
        )}
      </div>
    </div>
  );
};

export default UserSettings;
